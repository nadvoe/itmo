CREATE OR REPLACE FUNCTION person_trigger()
RETURNS TRIGGER AS $person_trigger$
BEGIN
	IF 	new.id IS NULL OR
		new.name IS NULL OR
		new.location_id IS NULL OR
		new.appearance_id is NULL OR
		new.condition_id IS NULL
		THEN RAISE EXCEPTION 'Отсутствует значение одного из обязательных полей';
	END IF;

	IF 	new.age > '120'
		THEN RAISE EXCEPTION 'Возраст не может быть больше 120 лет';
	END IF; 
	
	IF	new.location_id NOT IN (SELECT (id) FROM Location)
		THEN RAISE EXCEPTION '';
	END IF;

	IF 	new.condition_id NOT IN (SELECT (id) FROM Person_Condition)
		THEN RAISE EXCEPTION '';
	END IF;

	IF 	new.appearance_id NOT IN (SELECT (id) FROM Appearance)
		THEN RAISE EXCEPTION '';
	END IF;

	RETURN new;
END;

$person_trigger$ LANGUAGE plpgsql;

CREATE OR REPLACE TRIGGER Person_trigger
BEFORE INSERT OR UPDATE ON Person
FOR EACH ROW EXECUTE FUNCTION person_trigger();

--триггер слабоват, потому что все его функции можно реализовать с помощью CHECK, так что напишем еще один:
--триггер резервного копирования при удалении/изменении записей в таблице Person

CREATE TABLE Person_backup (
id SERIAL PRIMARY KEY,
person_id BIGINT NOT NULL,
name TEXT NOT NULL, 
status TEXT NOT NULL
);

CREATE OR REPLACE FUNCTION backup_update ()
RETURNS TRIGGER AS $$
BEGIN
INSERT INTO Person_backup(person_id, name, status)
VALUES (OLD.id, OLD.name, 'updated');
RETURN OLD
END;

$$ LANGUAGE plpgsql;


CREATE OR REPLACE TRIGGER Backup_update
BEFORE UPDATE ON Person
FOR EACH ROW EXECUTE FUNCTION backup_update();

UPDATE Person SET name='Илюха' WHERE name='Илья';

-----------------------------------------------------------------------

CREATE OR REPLACE FUNCTION backup_delete ()
RETURNS TRIGGER AS $$
BEGIN
INSERT INTO Person_backup(person_id, name, status)
VALUES (OLD.id, OLD.name, 'updated');
RETURN NEW;
END;

$$ LANGUAGE plpgsql;


CREATE OR REPLACE TRIGGER Backup_delete
BEFORE DELETE ON Person
FOR EACH ROW EXECUTE FUNCTION backup_delete();

INSERT INTO Person (name, age, location_id, appearance_id, condition_id) VALUES ('Иркутянин', 35, 6, 1, 5);
DELETE FROM Person WHERE name='Иркутянин';
