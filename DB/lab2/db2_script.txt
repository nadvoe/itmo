--1
--Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
--Таблицы: Н_ЛЮДИ, Н_СЕССИЯ.
--Вывести атрибуты: Н_ЛЮДИ.ИМЯ, Н_СЕССИЯ.ИД.
--Фильтры (AND):
--a) Н_ЛЮДИ.ФАМИЛИЯ = Соколов.
--b) Н_СЕССИЯ.УЧГОД < 2001/2002.
--c) Н_СЕССИЯ.УЧГОД > 2001/2002.
--Вид соединения: LEFT JOIN.

SELECT Н_ЛЮДИ.ИМЯ,Н_СЕССИЯ.ИД FROM Н_ЛЮДИ
LEFT JOIN Н_СЕССИЯ ON Н_ЛЮДИ.ИД = Н_СЕССИЯ.ЧЛВК_ИД
WHERE Н_ЛЮДИ.ФАМИЛИЯ = 'Соколов' AND Н_СЕССИЯ.УЧГОД < '2001/2002' AND Н_СЕССИЯ.УЧГОД > '2001/2002';


--2
--Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
--Таблицы: Н_ЛЮДИ, Н_ОБУЧЕНИЯ, Н_УЧЕНИКИ.
--Вывести атрибуты: Н_ЛЮДИ.ИМЯ, Н_ОБУЧЕНИЯ.ЧЛВК_ИД, Н_УЧЕНИКИ.ИД.
--Фильтры: (AND)
--a) Н_ЛЮДИ.ФАМИЛИЯ > Иванов.
--b) Н_ОБУЧЕНИЯ.НЗК > 999080.
--Вид соединения: LEFT JOIN.

SELECT Н_ЛЮДИ.ИМЯ, Н_ОБУЧЕНИЯ.ЧЛВК_ИД, Н_УЧЕНИКИ.ИД FROM Н_ОБУЧЕНИЯ
LEFT JOIN Н_ЛЮДИ ON Н_ОБУЧЕНИЯ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
LEFT JOIN Н_УЧЕНИКИ ON Н_ОБУЧЕНИЯ.ЧЛВК_ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
WHERE Н_ЛЮДИ.ФАМИЛИЯ > 'Иванов' AND Н_ОБУЧЕНИЯ.НЗК > '999080';


--3 
--Составить запрос, который ответит на вопрос, есть ли среди студентов группы 3102 те, кто не имеет отчества./

--3.1
SELECT Н_ЛЮДИ.ИМЯ FROM Н_УЧЕНИКИ 
INNER JOIN Н_ЛЮДИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
WHERE Н_УЧЕНИКИ.ГРУППА = '3102' AND Н_ЛЮДИ.ОТЧЕСТВО = '.';

--3.2
SELECT Н_ЛЮДИ.ОТЧЕСТВО, COUNT(ОТЧЕСТВО) FROM Н_УЧЕНИКИ 
INNER JOIN Н_ЛЮДИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
WHERE Н_УЧЕНИКИ.ГРУППА = '3102' AND Н_ЛЮДИ.ОТЧЕСТВО = '.'
GROUP BY Н_ЛЮДИ.ОТЧЕСТВО
HAVING COUNT(ОТЧЕСТВО)>1;


--3.3
SELECT EXISTS(SELECT Н_ЛЮДИ.ИМЯ FROM Н_УЧЕНИКИ 
INNER JOIN Н_ЛЮДИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
WHERE Н_УЧЕНИКИ.ГРУППА = '3102' AND Н_ЛЮДИ.ОТЧЕСТВО = '.') AS ЕСТЬ_УЧЕНИКИ_БЕЗ_ОТЧЕСТВА;


--4
--Найти группы, в которых в 2011 году было менее 5 обучающихся студентов на кафедре вычислительной техники.
--Для реализации использовать подзапрос.

--no subquery

SELECT Н_УЧЕНИКИ.ГРУППА FROM Н_УЧЕНИКИ
INNER JOIN Н_ПЛАНЫ ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
INNER JOIN Н_ОТДЕЛЫ ON Н_ПЛАНЫ.ОТД_ИД_ЗАКРЕПЛЕН_ЗА = Н_ОТДЕЛЫ.ИД
WHERE Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ = 'ВТ' AND (Н_ПЛАНЫ.УЧЕБНЫЙ_ГОД = '2010/2011' OR Н_ПЛАНЫ.УЧЕБНЫЙ_ГОД = '2011/2012')
GROUP BY Н_УЧЕНИКИ.ГРУППА
HAVING COUNT(Н_УЧЕНИКИ.ИД) >= 5
ORDER BY Н_УЧЕНИКИ.ГРУППА DESC;

--with subquery

SELECT Н_УЧЕНИКИ.ГРУППА FROM Н_УЧЕНИКИ
WHERE Н_УЧЕНИКИ.ПЛАН_ИД IN 
(SELECT Н_УЧЕНИКИ.ПЛАН_ИД FROM Н_ОТДЕЛЫ
INNER JOIN Н_ПЛАНЫ ON Н_ПЛАНЫ.ОТД_ИД_ЗАКРЕПЛЕН_ЗА = Н_ОТДЕЛЫ.ИД
INNER JOIN Н_УЧЕНИКИ ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
WHERE Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ = 'ВТ' AND (Н_ПЛАНЫ.УЧЕБНЫЙ_ГОД = '2010/2011' OR Н_ПЛАНЫ.УЧЕБНЫЙ_ГОД = '2011/2012'))
GROUP BY Н_УЧЕНИКИ.ГРУППА
HAVING COUNT(Н_УЧЕНИКИ.ИД) >= 5
ORDER BY Н_УЧЕНИКИ.ГРУППА DESC;


--5 
--Выведите таблицу со средними оценками студентов группы 4100 (Номер, ФИО, Ср_оценка), 
--у которых средняя оценка не больше средней оценки в группе 1100.

SELECT 
    Н_УЧЕНИКИ.ГРУППА AS Номер,
    CONCAT(Н_ЛЮДИ.ФАМИЛИЯ, ' ', Н_ЛЮДИ.ИМЯ, ' ', Н_ЛЮДИ.ОТЧЕСТВО) AS ФИО,
    AVG(CAST(Н_ВЕДОМОСТИ.ОЦЕНКА AS numeric)) AS СР_ОЦЕНКА
FROM
    Н_УЧЕНИКИ
    JOIN Н_ЛЮДИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
    JOIN Н_ВЕДОМОСТИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД
WHERE 
    Н_УЧЕНИКИ.ГРУППА = '4100'
    AND Н_ВЕДОМОСТИ.ОЦЕНКА NOT LIKE 'зачет'
    AND Н_ВЕДОМОСТИ.ОЦЕНКА NOT LIKE 'незач'
    AND Н_ВЕДОМОСТИ.ОЦЕНКА NOT LIKE 'неявка'
    AND Н_ВЕДОМОСТИ.ОЦЕНКА NOT LIKE 'осв'
GROUP BY 
    Н_УЧЕНИКИ.ГРУППА, Н_УЧЕНИКИ.ЧЛВК_ИД, Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ОТЧЕСТВО
HAVING 
    AVG(CAST(Н_ВЕДОМОСТИ.ОЦЕНКА AS numeric)) <=
    (SELECT AVG(CAST(Н_ВЕДОМОСТИ.ОЦЕНКА AS numeric)) 
    FROM Н_УЧЕНИКИ JOIN Н_ВЕДОМОСТИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД
    WHERE 
    Н_УЧЕНИКИ.ГРУППА = '1101' 
    AND Н_ВЕДОМОСТИ.ОЦЕНКА NOT LIKE 'зачет'
    AND Н_ВЕДОМОСТИ.ОЦЕНКА NOT LIKE 'незач'
    AND Н_ВЕДОМОСТИ.ОЦЕНКА NOT LIKE 'неявка'
    AND Н_ВЕДОМОСТИ.ОЦЕНКА NOT LIKE 'осв');


--6
--Получить список студентов, зачисленных после первого сентября 2012 года на первый курс заочной формы обучения (специальность: Программная инженерия). В результат включить:
--номер группы;
--номер, фамилию, имя и отчество студента;
--номер и состояние пункта приказа;
--Для реализации использовать подзапрос с EXISTS.


SELECT 
ученики.ГРУППА AS "Номер группы",
люди.ФАМИЛИЯ || ' ' || люди.ИМЯ || ' ' || люди.ОТЧЕСТВО AS "ФИО",
ученики.П_ПРКОК_ИД AS "Номер пункта приказа"
FROM Н_УЧЕНИКИ AS ученики 
JOIN Н_ЛЮДИ AS люди ON ученики.ЧЛВК_ИД = люди.ИД
WHERE ученики.СОСТОЯНИЕ = 'ЗАЧИСЛЕН'
AND ученики.НАЧАЛО > '2012-09-01'
AND EXISTS (
    SELECT*
    FROM Н_ФОРМЫ_ОБУЧЕНИЯ AS ФО
    WHERE ФО.ИД = ученики.ВИД_ОБУЧ_ИД
    AND ФО.НАИМЕНОВАНИЕ = 'Заочная'
) 
AND EXISTS (
    SELECT * FROM Н_ПЛАНЫ AS П
    JOIN Н_НАПР_СПЕЦ AS Н ON П.ТПЛ_ИД = Н.ИД
    WHERE П.ИД = ученики.ПЛАН_ИД
    AND Н.НАИМЕНОВАНИЕ = 'Программная инженерия'
)
AND NOT EXISTS (
    SELECT * 
    FROM Н_УЧЕНИКИ AS У
    WHERE У.ЧЛВК_ИД = люди.ИД
    AND У.ПЛАН_ИД IN (
        SELECT П.ИД
        FROM Н_ПЛАНЫ AS П 
        JOIN Н_НАПР_СПЕЦ AS Н ON П.ТПЛ_ИД = Н.ИД
        WHERE Н.НАИМЕНОВАНИЕ = 'Программная инженерия'
    )AND У.ВИД_ОБУЧ_ИД IN (
    SELECT ИД
    FROM Н_ФОРМЫ_ОБУЧЕНИЯ 
    WHERE НАИМЕНОВАНИЕ = 'Заочная'
)
);

--7
--Сформировать запрос для получения числа на ФКТИУ хорошистов.

SELECT 
	COUNT(Н_ЛЮДИ.ИД) AS "Число хорошистов на ФКТИУ"
FROM 
	Н_ЛЮДИ
	JOIN Н_УЧЕНИКИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
	JOIN Н_ПЛАНЫ ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
	JOIN Н_ОТДЕЛЫ ON Н_ПЛАНЫ.ОТД_ИД = Н_ОТДЕЛЫ.ИД
WHERE 
	Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ = 'ФКТИУ' 
	AND Н_ЛЮДИ.ИД IN (SELECT Н_ЛЮДИ.ИД FROM Н_ЛЮДИ
				JOIN Н_ВЕДОМОСТИ ON Н_ВЕДОМОСТИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
				JOIN Н_ОЦЕНКИ ON Н_ВЕДОМОСТИ.ОЦЕНКА = Н_ОЦЕНКИ.КОД
				GROUP BY Н_ЛЮДИ.ИД, Н_ОЦЕНКИ.ПРИМЕЧАНИЕ 
				HAVING Н_ОЦЕНКИ.ПРИМЕЧАНИЕ = 'хорошо');
